##1、ReentrantLock(可重入锁)
  概念和特性：
   ReentrantLock 是一个可重入的互斥（/独占）锁，又称为“独占锁”.
   ReentrantLock通过自定义队列同步器（AQS-AbstractQueuedSychronized，是实现锁的关键）来实现锁的获取与释放。
   其可以完全替代 synchronized 关键字。JDK 5.0 早期版本，其性能远好于 synchronized，但 JDK 6.0 开始，JDK 对 synchronized 做了大量的优化，使得两者差距并不大。
  “独占”，就是在同一时刻只能有一个线程获取到锁，而其它获取锁的线程只能处于同步队列中等待，只有获取锁的线程释放了锁，后继的线程才能够获取锁。
  “可重入”，就是支持重进入的锁，它表示该锁能够支持一个线程对资源的重复加锁。
  该锁还支持获取锁时的公平和非公平性选择。“公平”是指“不同的线程获取锁的机制是公平的”，而“不公平”是指“不同的线程获取锁的机制是非公平的”。
  被使用：ThreadPoolExecutor使用可重入锁
  精彩博文：https://www.cnblogs.com/gxyandwmm/p/9387833.html
##1、volatile(关键字)
   《深入理解Java虚拟机》12章java内存模型，讲解的很清楚
